name: Deploy to Amazon ECR

on:
  push:
    branches:
      - dev

env:
  AWS_REGION: ap-northeast-1       
  ECR_REPOSITORY: lloseum


jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      run: |
        ./gradlew build -x test

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIARDU6YU36ZK7KWUFT
        aws-secret-access-key: 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
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        
    - name: Deploy to App Runner
      id: deploy-apprunner
      uses: awslabs/amazon-app-runner-deploy@main
      with:
        service: waglewagle
        image: ${{ steps.build-image.outputs.image }}   
        access-role-arn: arn:aws:iam::076568635133:role/test
        region: ${{ env.AWS_REGION }}
        cpu : 1
        memory : 2
        port: 8080
        wait-for-service-stability: false


    - name: App Runner output
      run: echo "App runner output ${{ steps.deploy-apprunner.outputs.service-id }}"
